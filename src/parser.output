Grammar

    0 $accept: prom $end

    1 prom: CLASS PROGRAM CB field_declarations method_declarations OB
    2     | CLASS PROGRAM CB OB
    3     | CLASS PROGRAM CB method_declarations OB
    4     | CLASS PROGRAM CB field_declarations OB

    5 field_declarations: field_declaration SC
    6                   | field_declarations field_declaration SC

    7 field_declaration: TYPE variables

    8 variables: variable
    9          | variables COMMA variable

   10 variable: ID
   11         | ID CS int_literal OS

   12 method_declarations: method_declaration
   13                    | method_declarations method_declaration

   14 method_declaration: TYPE ID args block
   15                   | VOID ID args block

   16 args: CL OL
   17     | CL TYPE ID OL
   18     | CL TYPE ID arg OL

   19 arg: COMMA TYPE ID
   20    | COMMA TYPE ID arg

   21 block: CB var_declarations statements OB
   22      | CB statements OB
   23      | CB var_declarations OB

   24 var_declarations: var_declaration SC
   25                 | var_declaration SC var_declarations

   26 var_declaration: TYPE location
   27                | TYPE location var_names

   28 var_names: COMMA location
   29          | COMMA location var_names

   30 statements: statement
   31           | statements statement

   32 statement: assignment
   33          | function_call SC
   34          | IF CL expr OL block
   35          | IF CL expr OL block ELSE block

   36 $@1: %empty

   37 statement: $@1 FOR identifier EQ expr COMMA expr block
   38          | RETURN SC
   39          | RETURN expr SC
   40          | BREAK SC
   41          | CONTINUE SC
   42          | block

   43 $@2: %empty

   44 assignment: location EQ $@2 expr SC
   45           | location PLUSONE expr SC
   46           | location SUBONE expr SC

   47 function_call: ID CL pars OL
   48              | CALLOUT CL STRING callout_args OL

   49 pars: expr
   50     | pars COMMA expr

   51 identifier: ID

   52 location: ID
   53         | ID CS expr OS

   54 callout_args: %empty
   55             | callout_args COMMA callout_arg

   56 callout_arg: expr
   57            | STRING

   58 expr: CL expr OL
   59     | location
   60     | literal
   61     | expr SUB expr
   62     | expr OR expr
   63     | expr AND expr
   64     | expr NQQ expr
   65     | expr EQQ expr
   66     | expr GE expr
   67     | expr LE expr
   68     | expr GT expr
   69     | expr LT expr
   70     | expr MOD expr
   71     | NOT expr
   72     | expr DIV expr
   73     | expr MUL expr
   74     | expr ADD expr
   75     | SUB expr

   76 literal: int_literal
   77        | CHAR_LITERAL
   78        | BOOL_LITERAL

   79 int_literal: DECIMAL_LITERAL
   80            | HEX_LITERAL


Terminals, with rules where they appear

$end (0) 0
error (256)
CALLOUT (258) 48
STRING (259) 48 57
ID (260) 10 11 14 15 17 18 19 20 47 51 52 53
CHAR_LITERAL (261) 77
DECIMAL_LITERAL (262) 79
BOOL_LITERAL (263) 78
HEX_LITERAL (264) 80
EQQ (265) 65
NQQ (266) 64
EQ (267) 37 44
AND (268) 63
OR (269) 62
LT (270) 69
GT (271) 68
LE (272) 67
GE (273) 66
ADD (274) 74
SUB (275) 61 75
MUL (276) 73
DIV (277) 72
MOD (278) 70
NOT (279) 71
OL (280) 16 17 18 34 35 47 48 58
CL (281) 16 17 18 34 35 47 48 58
OS (282) 11 53
CS (283) 11 53
CB (284) 1 2 3 4 21 22 23
OB (285) 1 2 3 4 21 22 23
CLASS (286) 1 2 3 4
PROGRAM (287) 1 2 3 4
TYPE (288) 7 14 17 18 19 20 26 27
SC (289) 5 6 24 25 33 38 39 40 41 44 45 46
COMMA (290) 9 19 20 28 29 37 50 55
VOID (291) 15
IF (292) 34 35
FOR (293) 37
BREAK (294) 40
CONTINUE (295) 41
ELSE (296) 35
RETURN (297) 38 39
PLUSONE (298) 45
SUBONE (299) 46


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
prom (46)
    on left: 1 2 3 4, on right: 0
field_declarations (47)
    on left: 5 6, on right: 1 4 6
field_declaration (48)
    on left: 7, on right: 5 6
variables (49)
    on left: 8 9, on right: 7 9
variable (50)
    on left: 10 11, on right: 8 9
method_declarations (51)
    on left: 12 13, on right: 1 3 13
method_declaration (52)
    on left: 14 15, on right: 12 13
args (53)
    on left: 16 17 18, on right: 14 15
arg (54)
    on left: 19 20, on right: 18 20
block (55)
    on left: 21 22 23, on right: 14 15 34 35 37 42
var_declarations (56)
    on left: 24 25, on right: 21 23 25
var_declaration (57)
    on left: 26 27, on right: 24 25
var_names (58)
    on left: 28 29, on right: 27 29
statements (59)
    on left: 30 31, on right: 21 22 31
statement (60)
    on left: 32 33 34 35 37 38 39 40 41 42, on right: 30 31
$@1 (61)
    on left: 36, on right: 37
assignment (62)
    on left: 44 45 46, on right: 32
$@2 (63)
    on left: 43, on right: 44
function_call (64)
    on left: 47 48, on right: 33
pars (65)
    on left: 49 50, on right: 47 50
identifier (66)
    on left: 51, on right: 37
location (67)
    on left: 52 53, on right: 26 27 28 29 44 45 46 59
callout_args (68)
    on left: 54 55, on right: 48 55
callout_arg (69)
    on left: 56 57, on right: 55
expr (70)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75,
    on right: 34 35 37 39 44 45 46 49 50 53 56 58 61 62 63 64 65 66
    67 68 69 70 71 72 73 74 75
literal (71)
    on left: 76 77 78, on right: 60
int_literal (72)
    on left: 79 80, on right: 11 76


State 0

    0 $accept: . prom $end

    CLASS  shift, and go to state 1

    prom  go to state 2


State 1

    1 prom: CLASS . PROGRAM CB field_declarations method_declarations OB
    2     | CLASS . PROGRAM CB OB
    3     | CLASS . PROGRAM CB method_declarations OB
    4     | CLASS . PROGRAM CB field_declarations OB

    PROGRAM  shift, and go to state 3


State 2

    0 $accept: prom . $end

    $end  shift, and go to state 4


State 3

    1 prom: CLASS PROGRAM . CB field_declarations method_declarations OB
    2     | CLASS PROGRAM . CB OB
    3     | CLASS PROGRAM . CB method_declarations OB
    4     | CLASS PROGRAM . CB field_declarations OB

    CB  shift, and go to state 5


State 4

    0 $accept: prom $end .

    $default  accept


State 5

    1 prom: CLASS PROGRAM CB . field_declarations method_declarations OB
    2     | CLASS PROGRAM CB . OB
    3     | CLASS PROGRAM CB . method_declarations OB
    4     | CLASS PROGRAM CB . field_declarations OB

    OB    shift, and go to state 6
    TYPE  shift, and go to state 7
    VOID  shift, and go to state 8

    field_declarations   go to state 9
    field_declaration    go to state 10
    method_declarations  go to state 11
    method_declaration   go to state 12


State 6

    2 prom: CLASS PROGRAM CB OB .

    $default  reduce using rule 2 (prom)


State 7

    7 field_declaration: TYPE . variables
   14 method_declaration: TYPE . ID args block

    ID  shift, and go to state 13

    variables  go to state 14
    variable   go to state 15


State 8

   15 method_declaration: VOID . ID args block

    ID  shift, and go to state 16


State 9

    1 prom: CLASS PROGRAM CB field_declarations . method_declarations OB
    4     | CLASS PROGRAM CB field_declarations . OB
    6 field_declarations: field_declarations . field_declaration SC

    OB    shift, and go to state 17
    TYPE  shift, and go to state 7
    VOID  shift, and go to state 8

    field_declaration    go to state 18
    method_declarations  go to state 19
    method_declaration   go to state 12


State 10

    5 field_declarations: field_declaration . SC

    SC  shift, and go to state 20


State 11

    3 prom: CLASS PROGRAM CB method_declarations . OB
   13 method_declarations: method_declarations . method_declaration

    OB    shift, and go to state 21
    TYPE  shift, and go to state 22
    VOID  shift, and go to state 8

    method_declaration  go to state 23


State 12

   12 method_declarations: method_declaration .

    $default  reduce using rule 12 (method_declarations)


State 13

   10 variable: ID .
   11         | ID . CS int_literal OS
   14 method_declaration: TYPE ID . args block

    CL  shift, and go to state 24
    CS  shift, and go to state 25

    $default  reduce using rule 10 (variable)

    args  go to state 26


State 14

    7 field_declaration: TYPE variables .
    9 variables: variables . COMMA variable

    COMMA  shift, and go to state 27

    $default  reduce using rule 7 (field_declaration)


State 15

    8 variables: variable .

    $default  reduce using rule 8 (variables)


State 16

   15 method_declaration: VOID ID . args block

    CL  shift, and go to state 24

    args  go to state 28


State 17

    4 prom: CLASS PROGRAM CB field_declarations OB .

    $default  reduce using rule 4 (prom)


State 18

    6 field_declarations: field_declarations field_declaration . SC

    SC  shift, and go to state 29


State 19

    1 prom: CLASS PROGRAM CB field_declarations method_declarations . OB
   13 method_declarations: method_declarations . method_declaration

    OB    shift, and go to state 30
    TYPE  shift, and go to state 22
    VOID  shift, and go to state 8

    method_declaration  go to state 23


State 20

    5 field_declarations: field_declaration SC .

    $default  reduce using rule 5 (field_declarations)


State 21

    3 prom: CLASS PROGRAM CB method_declarations OB .

    $default  reduce using rule 3 (prom)


State 22

   14 method_declaration: TYPE . ID args block

    ID  shift, and go to state 31


State 23

   13 method_declarations: method_declarations method_declaration .

    $default  reduce using rule 13 (method_declarations)


State 24

   16 args: CL . OL
   17     | CL . TYPE ID OL
   18     | CL . TYPE ID arg OL

    OL    shift, and go to state 32
    TYPE  shift, and go to state 33


State 25

   11 variable: ID CS . int_literal OS

    DECIMAL_LITERAL  shift, and go to state 34
    HEX_LITERAL      shift, and go to state 35

    int_literal  go to state 36


State 26

   14 method_declaration: TYPE ID args . block

    CB  shift, and go to state 37

    block  go to state 38


State 27

    9 variables: variables COMMA . variable

    ID  shift, and go to state 39

    variable  go to state 40


State 28

   15 method_declaration: VOID ID args . block

    CB  shift, and go to state 37

    block  go to state 41


State 29

    6 field_declarations: field_declarations field_declaration SC .

    $default  reduce using rule 6 (field_declarations)


State 30

    1 prom: CLASS PROGRAM CB field_declarations method_declarations OB .

    $default  reduce using rule 1 (prom)


State 31

   14 method_declaration: TYPE ID . args block

    CL  shift, and go to state 24

    args  go to state 26


State 32

   16 args: CL OL .

    $default  reduce using rule 16 (args)


State 33

   17 args: CL TYPE . ID OL
   18     | CL TYPE . ID arg OL

    ID  shift, and go to state 42


State 34

   79 int_literal: DECIMAL_LITERAL .

    $default  reduce using rule 79 (int_literal)


State 35

   80 int_literal: HEX_LITERAL .

    $default  reduce using rule 80 (int_literal)


State 36

   11 variable: ID CS int_literal . OS

    OS  shift, and go to state 43


State 37

   21 block: CB . var_declarations statements OB
   22      | CB . statements OB
   23      | CB . var_declarations OB

    CALLOUT   shift, and go to state 44
    ID        shift, and go to state 45
    CB        shift, and go to state 37
    TYPE      shift, and go to state 46
    IF        shift, and go to state 47
    BREAK     shift, and go to state 48
    CONTINUE  shift, and go to state 49
    RETURN    shift, and go to state 50

    $default  reduce using rule 36 ($@1)

    block             go to state 51
    var_declarations  go to state 52
    var_declaration   go to state 53
    statements        go to state 54
    statement         go to state 55
    $@1               go to state 56
    assignment        go to state 57
    function_call     go to state 58
    location          go to state 59


State 38

   14 method_declaration: TYPE ID args block .

    $default  reduce using rule 14 (method_declaration)


State 39

   10 variable: ID .
   11         | ID . CS int_literal OS

    CS  shift, and go to state 25

    $default  reduce using rule 10 (variable)


State 40

    9 variables: variables COMMA variable .

    $default  reduce using rule 9 (variables)


State 41

   15 method_declaration: VOID ID args block .

    $default  reduce using rule 15 (method_declaration)


State 42

   17 args: CL TYPE ID . OL
   18     | CL TYPE ID . arg OL

    OL     shift, and go to state 60
    COMMA  shift, and go to state 61

    arg  go to state 62


State 43

   11 variable: ID CS int_literal OS .

    $default  reduce using rule 11 (variable)


State 44

   48 function_call: CALLOUT . CL STRING callout_args OL

    CL  shift, and go to state 63


State 45

   47 function_call: ID . CL pars OL
   52 location: ID .
   53         | ID . CS expr OS

    CL  shift, and go to state 64
    CS  shift, and go to state 65

    $default  reduce using rule 52 (location)


State 46

   26 var_declaration: TYPE . location
   27                | TYPE . location var_names

    ID  shift, and go to state 66

    location  go to state 67


State 47

   34 statement: IF . CL expr OL block
   35          | IF . CL expr OL block ELSE block

    CL  shift, and go to state 68


State 48

   40 statement: BREAK . SC

    SC  shift, and go to state 69


State 49

   41 statement: CONTINUE . SC

    SC  shift, and go to state 70


State 50

   38 statement: RETURN . SC
   39          | RETURN . expr SC

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75
    SC               shift, and go to state 76

    location     go to state 77
    expr         go to state 78
    literal      go to state 79
    int_literal  go to state 80


State 51

   42 statement: block .

    $default  reduce using rule 42 (statement)


State 52

   21 block: CB var_declarations . statements OB
   23      | CB var_declarations . OB

    CALLOUT   shift, and go to state 44
    ID        shift, and go to state 45
    CB        shift, and go to state 37
    OB        shift, and go to state 81
    IF        shift, and go to state 47
    BREAK     shift, and go to state 48
    CONTINUE  shift, and go to state 49
    RETURN    shift, and go to state 50

    $default  reduce using rule 36 ($@1)

    block          go to state 51
    statements     go to state 82
    statement      go to state 55
    $@1            go to state 56
    assignment     go to state 57
    function_call  go to state 58
    location       go to state 59


State 53

   24 var_declarations: var_declaration . SC
   25                 | var_declaration . SC var_declarations

    SC  shift, and go to state 83


State 54

   22 block: CB statements . OB
   31 statements: statements . statement

    CALLOUT   shift, and go to state 44
    ID        shift, and go to state 45
    CB        shift, and go to state 37
    OB        shift, and go to state 84
    IF        shift, and go to state 47
    BREAK     shift, and go to state 48
    CONTINUE  shift, and go to state 49
    RETURN    shift, and go to state 50

    $default  reduce using rule 36 ($@1)

    block          go to state 51
    statement      go to state 85
    $@1            go to state 56
    assignment     go to state 57
    function_call  go to state 58
    location       go to state 59


State 55

   30 statements: statement .

    $default  reduce using rule 30 (statements)


State 56

   37 statement: $@1 . FOR identifier EQ expr COMMA expr block

    FOR  shift, and go to state 86


State 57

   32 statement: assignment .

    $default  reduce using rule 32 (statement)


State 58

   33 statement: function_call . SC

    SC  shift, and go to state 87


State 59

   44 assignment: location . EQ $@2 expr SC
   45           | location . PLUSONE expr SC
   46           | location . SUBONE expr SC

    EQ       shift, and go to state 88
    PLUSONE  shift, and go to state 89
    SUBONE   shift, and go to state 90


State 60

   17 args: CL TYPE ID OL .

    $default  reduce using rule 17 (args)


State 61

   19 arg: COMMA . TYPE ID
   20    | COMMA . TYPE ID arg

    TYPE  shift, and go to state 91


State 62

   18 args: CL TYPE ID arg . OL

    OL  shift, and go to state 92


State 63

   48 function_call: CALLOUT CL . STRING callout_args OL

    STRING  shift, and go to state 93


State 64

   47 function_call: ID CL . pars OL

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    pars         go to state 94
    location     go to state 77
    expr         go to state 95
    literal      go to state 79
    int_literal  go to state 80


State 65

   53 location: ID CS . expr OS

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 96
    literal      go to state 79
    int_literal  go to state 80


State 66

   52 location: ID .
   53         | ID . CS expr OS

    CS  shift, and go to state 65

    $default  reduce using rule 52 (location)


State 67

   26 var_declaration: TYPE location .
   27                | TYPE location . var_names

    COMMA  shift, and go to state 97

    $default  reduce using rule 26 (var_declaration)

    var_names  go to state 98


State 68

   34 statement: IF CL . expr OL block
   35          | IF CL . expr OL block ELSE block

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 99
    literal      go to state 79
    int_literal  go to state 80


State 69

   40 statement: BREAK SC .

    $default  reduce using rule 40 (statement)


State 70

   41 statement: CONTINUE SC .

    $default  reduce using rule 41 (statement)


State 71

   77 literal: CHAR_LITERAL .

    $default  reduce using rule 77 (literal)


State 72

   78 literal: BOOL_LITERAL .

    $default  reduce using rule 78 (literal)


State 73

   75 expr: SUB . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 100
    literal      go to state 79
    int_literal  go to state 80


State 74

   71 expr: NOT . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 101
    literal      go to state 79
    int_literal  go to state 80


State 75

   58 expr: CL . expr OL

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 102
    literal      go to state 79
    int_literal  go to state 80


State 76

   38 statement: RETURN SC .

    $default  reduce using rule 38 (statement)


State 77

   59 expr: location .

    $default  reduce using rule 59 (expr)


State 78

   39 statement: RETURN expr . SC
   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    EQQ  shift, and go to state 103
    NQQ  shift, and go to state 104
    AND  shift, and go to state 105
    OR   shift, and go to state 106
    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115
    SC   shift, and go to state 116


State 79

   60 expr: literal .

    $default  reduce using rule 60 (expr)


State 80

   76 literal: int_literal .

    $default  reduce using rule 76 (literal)


State 81

   23 block: CB var_declarations OB .

    $default  reduce using rule 23 (block)


State 82

   21 block: CB var_declarations statements . OB
   31 statements: statements . statement

    CALLOUT   shift, and go to state 44
    ID        shift, and go to state 45
    CB        shift, and go to state 37
    OB        shift, and go to state 117
    IF        shift, and go to state 47
    BREAK     shift, and go to state 48
    CONTINUE  shift, and go to state 49
    RETURN    shift, and go to state 50

    $default  reduce using rule 36 ($@1)

    block          go to state 51
    statement      go to state 85
    $@1            go to state 56
    assignment     go to state 57
    function_call  go to state 58
    location       go to state 59


State 83

   24 var_declarations: var_declaration SC .
   25                 | var_declaration SC . var_declarations

    TYPE  shift, and go to state 46

    $default  reduce using rule 24 (var_declarations)

    var_declarations  go to state 118
    var_declaration   go to state 53


State 84

   22 block: CB statements OB .

    $default  reduce using rule 22 (block)


State 85

   31 statements: statements statement .

    $default  reduce using rule 31 (statements)


State 86

   37 statement: $@1 FOR . identifier EQ expr COMMA expr block

    ID  shift, and go to state 119

    identifier  go to state 120


State 87

   33 statement: function_call SC .

    $default  reduce using rule 33 (statement)


State 88

   44 assignment: location EQ . $@2 expr SC

    $default  reduce using rule 43 ($@2)

    $@2  go to state 121


State 89

   45 assignment: location PLUSONE . expr SC

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 122
    literal      go to state 79
    int_literal  go to state 80


State 90

   46 assignment: location SUBONE . expr SC

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 123
    literal      go to state 79
    int_literal  go to state 80


State 91

   19 arg: COMMA TYPE . ID
   20    | COMMA TYPE . ID arg

    ID  shift, and go to state 124


State 92

   18 args: CL TYPE ID arg OL .

    $default  reduce using rule 18 (args)


State 93

   48 function_call: CALLOUT CL STRING . callout_args OL

    $default  reduce using rule 54 (callout_args)

    callout_args  go to state 125


State 94

   47 function_call: ID CL pars . OL
   50 pars: pars . COMMA expr

    OL     shift, and go to state 126
    COMMA  shift, and go to state 127


State 95

   49 pars: expr .
   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    EQQ  shift, and go to state 103
    NQQ  shift, and go to state 104
    AND  shift, and go to state 105
    OR   shift, and go to state 106
    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115

    $default  reduce using rule 49 (pars)


State 96

   53 location: ID CS expr . OS
   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    EQQ  shift, and go to state 103
    NQQ  shift, and go to state 104
    AND  shift, and go to state 105
    OR   shift, and go to state 106
    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115
    OS   shift, and go to state 128


State 97

   28 var_names: COMMA . location
   29          | COMMA . location var_names

    ID  shift, and go to state 66

    location  go to state 129


State 98

   27 var_declaration: TYPE location var_names .

    $default  reduce using rule 27 (var_declaration)


State 99

   34 statement: IF CL expr . OL block
   35          | IF CL expr . OL block ELSE block
   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    EQQ  shift, and go to state 103
    NQQ  shift, and go to state 104
    AND  shift, and go to state 105
    OR   shift, and go to state 106
    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115
    OL   shift, and go to state 130


State 100

   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr
   75     | SUB expr .

    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115

    $default  reduce using rule 75 (expr)


State 101

   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   71     | NOT expr .
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    $default  reduce using rule 71 (expr)


State 102

   58 expr: CL expr . OL
   61     | expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    EQQ  shift, and go to state 103
    NQQ  shift, and go to state 104
    AND  shift, and go to state 105
    OR   shift, and go to state 106
    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115
    OL   shift, and go to state 131


State 103

   65 expr: expr EQQ . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 132
    literal      go to state 79
    int_literal  go to state 80


State 104

   64 expr: expr NQQ . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 133
    literal      go to state 79
    int_literal  go to state 80


State 105

   63 expr: expr AND . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 134
    literal      go to state 79
    int_literal  go to state 80


State 106

   62 expr: expr OR . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 135
    literal      go to state 79
    int_literal  go to state 80


State 107

   69 expr: expr LT . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 136
    literal      go to state 79
    int_literal  go to state 80


State 108

   68 expr: expr GT . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 137
    literal      go to state 79
    int_literal  go to state 80


State 109

   67 expr: expr LE . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 138
    literal      go to state 79
    int_literal  go to state 80


State 110

   66 expr: expr GE . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 139
    literal      go to state 79
    int_literal  go to state 80


State 111

   74 expr: expr ADD . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 140
    literal      go to state 79
    int_literal  go to state 80


State 112

   61 expr: expr SUB . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 141
    literal      go to state 79
    int_literal  go to state 80


State 113

   73 expr: expr MUL . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 142
    literal      go to state 79
    int_literal  go to state 80


State 114

   72 expr: expr DIV . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 143
    literal      go to state 79
    int_literal  go to state 80


State 115

   70 expr: expr MOD . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 144
    literal      go to state 79
    int_literal  go to state 80


State 116

   39 statement: RETURN expr SC .

    $default  reduce using rule 39 (statement)


State 117

   21 block: CB var_declarations statements OB .

    $default  reduce using rule 21 (block)


State 118

   25 var_declarations: var_declaration SC var_declarations .

    $default  reduce using rule 25 (var_declarations)


State 119

   51 identifier: ID .

    $default  reduce using rule 51 (identifier)


State 120

   37 statement: $@1 FOR identifier . EQ expr COMMA expr block

    EQ  shift, and go to state 145


State 121

   44 assignment: location EQ $@2 . expr SC

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 146
    literal      go to state 79
    int_literal  go to state 80


State 122

   45 assignment: location PLUSONE expr . SC
   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    EQQ  shift, and go to state 103
    NQQ  shift, and go to state 104
    AND  shift, and go to state 105
    OR   shift, and go to state 106
    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115
    SC   shift, and go to state 147


State 123

   46 assignment: location SUBONE expr . SC
   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    EQQ  shift, and go to state 103
    NQQ  shift, and go to state 104
    AND  shift, and go to state 105
    OR   shift, and go to state 106
    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115
    SC   shift, and go to state 148


State 124

   19 arg: COMMA TYPE ID .
   20    | COMMA TYPE ID . arg

    COMMA  shift, and go to state 61

    $default  reduce using rule 19 (arg)

    arg  go to state 149


State 125

   48 function_call: CALLOUT CL STRING callout_args . OL
   55 callout_args: callout_args . COMMA callout_arg

    OL     shift, and go to state 150
    COMMA  shift, and go to state 151


State 126

   47 function_call: ID CL pars OL .

    $default  reduce using rule 47 (function_call)


State 127

   50 pars: pars COMMA . expr

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 152
    literal      go to state 79
    int_literal  go to state 80


State 128

   53 location: ID CS expr OS .

    $default  reduce using rule 53 (location)


State 129

   28 var_names: COMMA location .
   29          | COMMA location . var_names

    COMMA  shift, and go to state 97

    $default  reduce using rule 28 (var_names)

    var_names  go to state 153


State 130

   34 statement: IF CL expr OL . block
   35          | IF CL expr OL . block ELSE block

    CB  shift, and go to state 37

    block  go to state 154


State 131

   58 expr: CL expr OL .

    $default  reduce using rule 58 (expr)


State 132

   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   65     | expr EQQ expr .
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    AND  shift, and go to state 105
    OR   shift, and go to state 106
    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115

    $default  reduce using rule 65 (expr)


State 133

   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   64     | expr NQQ expr .
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    AND  shift, and go to state 105
    OR   shift, and go to state 106
    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115

    $default  reduce using rule 64 (expr)


State 134

   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   63     | expr AND expr .
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115

    $default  reduce using rule 63 (expr)


State 135

   61 expr: expr . SUB expr
   62     | expr . OR expr
   62     | expr OR expr .
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115

    $default  reduce using rule 62 (expr)


State 136

   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   69     | expr LT expr .
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115

    $default  reduce using rule 69 (expr)


State 137

   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   68     | expr GT expr .
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115

    $default  reduce using rule 68 (expr)


State 138

   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   67     | expr LE expr .
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115

    $default  reduce using rule 67 (expr)


State 139

   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   66     | expr GE expr .
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115

    $default  reduce using rule 66 (expr)


State 140

   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr
   74     | expr ADD expr .

    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115

    $default  reduce using rule 74 (expr)


State 141

   61 expr: expr . SUB expr
   61     | expr SUB expr .
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115

    $default  reduce using rule 61 (expr)


State 142

   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   73     | expr MUL expr .
   74     | expr . ADD expr

    $default  reduce using rule 73 (expr)


State 143

   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   72     | expr DIV expr .
   73     | expr . MUL expr
   74     | expr . ADD expr

    $default  reduce using rule 72 (expr)


State 144

   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   70     | expr MOD expr .
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    $default  reduce using rule 70 (expr)


State 145

   37 statement: $@1 FOR identifier EQ . expr COMMA expr block

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 155
    literal      go to state 79
    int_literal  go to state 80


State 146

   44 assignment: location EQ $@2 expr . SC
   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    EQQ  shift, and go to state 103
    NQQ  shift, and go to state 104
    AND  shift, and go to state 105
    OR   shift, and go to state 106
    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115
    SC   shift, and go to state 156


State 147

   45 assignment: location PLUSONE expr SC .

    $default  reduce using rule 45 (assignment)


State 148

   46 assignment: location SUBONE expr SC .

    $default  reduce using rule 46 (assignment)


State 149

   20 arg: COMMA TYPE ID arg .

    $default  reduce using rule 20 (arg)


State 150

   48 function_call: CALLOUT CL STRING callout_args OL .

    $default  reduce using rule 48 (function_call)


State 151

   55 callout_args: callout_args COMMA . callout_arg

    STRING           shift, and go to state 157
    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    callout_arg  go to state 158
    expr         go to state 159
    literal      go to state 79
    int_literal  go to state 80


State 152

   50 pars: pars COMMA expr .
   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    EQQ  shift, and go to state 103
    NQQ  shift, and go to state 104
    AND  shift, and go to state 105
    OR   shift, and go to state 106
    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115

    $default  reduce using rule 50 (pars)


State 153

   29 var_names: COMMA location var_names .

    $default  reduce using rule 29 (var_names)


State 154

   34 statement: IF CL expr OL block .
   35          | IF CL expr OL block . ELSE block

    ELSE  shift, and go to state 160

    $default  reduce using rule 34 (statement)


State 155

   37 statement: $@1 FOR identifier EQ expr . COMMA expr block
   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    EQQ    shift, and go to state 103
    NQQ    shift, and go to state 104
    AND    shift, and go to state 105
    OR     shift, and go to state 106
    LT     shift, and go to state 107
    GT     shift, and go to state 108
    LE     shift, and go to state 109
    GE     shift, and go to state 110
    ADD    shift, and go to state 111
    SUB    shift, and go to state 112
    MUL    shift, and go to state 113
    DIV    shift, and go to state 114
    MOD    shift, and go to state 115
    COMMA  shift, and go to state 161


State 156

   44 assignment: location EQ $@2 expr SC .

    $default  reduce using rule 44 (assignment)


State 157

   57 callout_arg: STRING .

    $default  reduce using rule 57 (callout_arg)


State 158

   55 callout_args: callout_args COMMA callout_arg .

    $default  reduce using rule 55 (callout_args)


State 159

   56 callout_arg: expr .
   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    EQQ  shift, and go to state 103
    NQQ  shift, and go to state 104
    AND  shift, and go to state 105
    OR   shift, and go to state 106
    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115

    $default  reduce using rule 56 (callout_arg)


State 160

   35 statement: IF CL expr OL block ELSE . block

    CB  shift, and go to state 37

    block  go to state 162


State 161

   37 statement: $@1 FOR identifier EQ expr COMMA . expr block

    ID               shift, and go to state 66
    CHAR_LITERAL     shift, and go to state 71
    DECIMAL_LITERAL  shift, and go to state 34
    BOOL_LITERAL     shift, and go to state 72
    HEX_LITERAL      shift, and go to state 35
    SUB              shift, and go to state 73
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 163
    literal      go to state 79
    int_literal  go to state 80


State 162

   35 statement: IF CL expr OL block ELSE block .

    $default  reduce using rule 35 (statement)


State 163

   37 statement: $@1 FOR identifier EQ expr COMMA expr . block
   61 expr: expr . SUB expr
   62     | expr . OR expr
   63     | expr . AND expr
   64     | expr . NQQ expr
   65     | expr . EQQ expr
   66     | expr . GE expr
   67     | expr . LE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . MOD expr
   72     | expr . DIV expr
   73     | expr . MUL expr
   74     | expr . ADD expr

    EQQ  shift, and go to state 103
    NQQ  shift, and go to state 104
    AND  shift, and go to state 105
    OR   shift, and go to state 106
    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LE   shift, and go to state 109
    GE   shift, and go to state 110
    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    MUL  shift, and go to state 113
    DIV  shift, and go to state 114
    MOD  shift, and go to state 115
    CB   shift, and go to state 37

    block  go to state 164


State 164

   37 statement: $@1 FOR identifier EQ expr COMMA expr block .

    $default  reduce using rule 37 (statement)
