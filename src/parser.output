State 6 conflicts: 1 shift/reduce


Grammar

    0 $accept: prom $end

    1 prom: CLASS PROGRAM CB field_declarations method_declarations OB

    2 field_declarations: %empty
    3                   | field_declarations field_declaration SC

    4 field_declaration: TYPE variables

    5 variables: variable
    6          | variables COMMA variable

    7 variable: ID
    8         | ID CS int_literal OS

    9 method_declarations: %empty
   10                    | method_declarations method_declaration

   11 method_declaration: TYPE ID args block
   12                   | VOID ID args block

   13 args: CL OL
   14     | CL TYPE ID arg OL

   15 arg: %empty
   16    | COMMA TYPE ID arg

   17 block: CB var_declarations statements OB

   18 var_declarations: %empty
   19                 | var_declaration SC var_declarations

   20 var_declaration: TYPE ID var_names

   21 var_names: %empty
   22          | COMMA ID var_names

   23 statements: %empty
   24           | statements statement

   25 statement: assignment
   26          | function_call SC
   27          | IF CL expr OL block
   28          | IF CL expr OL block ELSE block
   29          | FOR ID EQ expr COMMA expr block
   30          | RETURN SC
   31          | RETURN expr SC
   32          | BREAK SC
   33          | CONTINUE SC
   34          | block

   35 assignment: location EQ expr SC
   36           | location PLUSONE expr SC
   37           | location SUBONE expr SC

   38 function_call: ID CL pars OL
   39              | CALLOUT CL STRING callout_args OL

   40 pars: expr
   41     | pars COMMA expr

   42 location: ID
   43         | ID CS expr OS

   44 callout_args: %empty
   45             | callout_args COMMA callout_arg

   46 callout_arg: expr
   47            | STRING

   48 expr: CL expr OL
   49     | location
   50     | literal
   51     | expr SUB expr
   52     | expr OR expr
   53     | expr AND expr
   54     | expr NQQ expr
   55     | expr EQQ expr
   56     | expr GE expr
   57     | expr LE expr
   58     | expr GT expr
   59     | expr LT expr
   60     | expr MOD expr
   61     | expr DIV expr
   62     | expr MUL expr
   63     | expr ADD expr
   64     | NOT expr

   65 literal: int_literal
   66        | CHAR_LITERAL
   67        | BOOL_LITERAL

   68 int_literal: DECIMAL_LITERAL
   69            | HEX_LITERAL


Terminals, with rules where they appear

$end (0) 0
error (256)
CALLOUT (258) 39
STRING (259) 39 47
ID (260) 7 8 11 12 14 16 20 22 29 38 42 43
CHAR_LITERAL (261) 66
DECIMAL_LITERAL (262) 68
BOOL_LITERAL (263) 67
HEX_LITERAL (264) 69
EQQ (265) 55
NQQ (266) 54
EQ (267) 29 35
AND (268) 53
OR (269) 52
LT (270) 59
GT (271) 58
LE (272) 57
GE (273) 56
ADD (274) 63
SUB (275) 51
MUL (276) 62
DIV (277) 61
MOD (278) 60
NOT (279) 64
OL (280) 13 14 27 28 38 39 48
CL (281) 13 14 27 28 38 39 48
OS (282) 8 43
CS (283) 8 43
CB (284) 1 17
OB (285) 1 17
CLASS (286) 1
PROGRAM (287) 1
TYPE (288) 4 11 14 16 20
SC (289) 3 19 26 30 31 32 33 35 36 37
COMMA (290) 6 16 22 29 41 45
VOID (291) 12
IF (292) 27 28
FOR (293) 29
BREAK (294) 32
CONTINUE (295) 33
ELSE (296) 28
RETURN (297) 30 31
PLUSONE (298) 36
SUBONE (299) 37


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
prom (46)
    on left: 1, on right: 0
field_declarations (47)
    on left: 2 3, on right: 1 3
field_declaration (48)
    on left: 4, on right: 3
variables (49)
    on left: 5 6, on right: 4 6
variable (50)
    on left: 7 8, on right: 5 6
method_declarations (51)
    on left: 9 10, on right: 1 10
method_declaration (52)
    on left: 11 12, on right: 10
args (53)
    on left: 13 14, on right: 11 12
arg (54)
    on left: 15 16, on right: 14 16
block (55)
    on left: 17, on right: 11 12 27 28 29 34
var_declarations (56)
    on left: 18 19, on right: 17 19
var_declaration (57)
    on left: 20, on right: 19
var_names (58)
    on left: 21 22, on right: 20 22
statements (59)
    on left: 23 24, on right: 17 24
statement (60)
    on left: 25 26 27 28 29 30 31 32 33 34, on right: 24
assignment (61)
    on left: 35 36 37, on right: 25
function_call (62)
    on left: 38 39, on right: 26
pars (63)
    on left: 40 41, on right: 38 41
location (64)
    on left: 42 43, on right: 35 36 37 49
callout_args (65)
    on left: 44 45, on right: 39 45
callout_arg (66)
    on left: 46 47, on right: 45
expr (67)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64, on right:
    27 28 29 31 35 36 37 40 41 43 46 48 51 52 53 54 55 56 57 58 59
    60 61 62 63 64
literal (68)
    on left: 65 66 67, on right: 50
int_literal (69)
    on left: 68 69, on right: 8 65


State 0

    0 $accept: . prom $end

    CLASS  shift, and go to state 1

    prom  go to state 2


State 1

    1 prom: CLASS . PROGRAM CB field_declarations method_declarations OB

    PROGRAM  shift, and go to state 3


State 2

    0 $accept: prom . $end

    $end  shift, and go to state 4


State 3

    1 prom: CLASS PROGRAM . CB field_declarations method_declarations OB

    CB  shift, and go to state 5


State 4

    0 $accept: prom $end .

    $default  accept


State 5

    1 prom: CLASS PROGRAM CB . field_declarations method_declarations OB

    $default  reduce using rule 2 (field_declarations)

    field_declarations  go to state 6


State 6

    1 prom: CLASS PROGRAM CB field_declarations . method_declarations OB
    3 field_declarations: field_declarations . field_declaration SC

    TYPE  shift, and go to state 7

    TYPE      [reduce using rule 9 (method_declarations)]
    $default  reduce using rule 9 (method_declarations)

    field_declaration    go to state 8
    method_declarations  go to state 9


State 7

    4 field_declaration: TYPE . variables

    ID  shift, and go to state 10

    variables  go to state 11
    variable   go to state 12


State 8

    3 field_declarations: field_declarations field_declaration . SC

    SC  shift, and go to state 13


State 9

    1 prom: CLASS PROGRAM CB field_declarations method_declarations . OB
   10 method_declarations: method_declarations . method_declaration

    OB    shift, and go to state 14
    TYPE  shift, and go to state 15
    VOID  shift, and go to state 16

    method_declaration  go to state 17


State 10

    7 variable: ID .
    8         | ID . CS int_literal OS

    CS  shift, and go to state 18

    $default  reduce using rule 7 (variable)


State 11

    4 field_declaration: TYPE variables .
    6 variables: variables . COMMA variable

    COMMA  shift, and go to state 19

    $default  reduce using rule 4 (field_declaration)


State 12

    5 variables: variable .

    $default  reduce using rule 5 (variables)


State 13

    3 field_declarations: field_declarations field_declaration SC .

    $default  reduce using rule 3 (field_declarations)


State 14

    1 prom: CLASS PROGRAM CB field_declarations method_declarations OB .

    $default  reduce using rule 1 (prom)


State 15

   11 method_declaration: TYPE . ID args block

    ID  shift, and go to state 20


State 16

   12 method_declaration: VOID . ID args block

    ID  shift, and go to state 21


State 17

   10 method_declarations: method_declarations method_declaration .

    $default  reduce using rule 10 (method_declarations)


State 18

    8 variable: ID CS . int_literal OS

    DECIMAL_LITERAL  shift, and go to state 22
    HEX_LITERAL      shift, and go to state 23

    int_literal  go to state 24


State 19

    6 variables: variables COMMA . variable

    ID  shift, and go to state 10

    variable  go to state 25


State 20

   11 method_declaration: TYPE ID . args block

    CL  shift, and go to state 26

    args  go to state 27


State 21

   12 method_declaration: VOID ID . args block

    CL  shift, and go to state 26

    args  go to state 28


State 22

   68 int_literal: DECIMAL_LITERAL .

    $default  reduce using rule 68 (int_literal)


State 23

   69 int_literal: HEX_LITERAL .

    $default  reduce using rule 69 (int_literal)


State 24

    8 variable: ID CS int_literal . OS

    OS  shift, and go to state 29


State 25

    6 variables: variables COMMA variable .

    $default  reduce using rule 6 (variables)


State 26

   13 args: CL . OL
   14     | CL . TYPE ID arg OL

    OL    shift, and go to state 30
    TYPE  shift, and go to state 31


State 27

   11 method_declaration: TYPE ID args . block

    CB  shift, and go to state 32

    block  go to state 33


State 28

   12 method_declaration: VOID ID args . block

    CB  shift, and go to state 32

    block  go to state 34


State 29

    8 variable: ID CS int_literal OS .

    $default  reduce using rule 8 (variable)


State 30

   13 args: CL OL .

    $default  reduce using rule 13 (args)


State 31

   14 args: CL TYPE . ID arg OL

    ID  shift, and go to state 35


State 32

   17 block: CB . var_declarations statements OB

    TYPE  shift, and go to state 36

    $default  reduce using rule 18 (var_declarations)

    var_declarations  go to state 37
    var_declaration   go to state 38


State 33

   11 method_declaration: TYPE ID args block .

    $default  reduce using rule 11 (method_declaration)


State 34

   12 method_declaration: VOID ID args block .

    $default  reduce using rule 12 (method_declaration)


State 35

   14 args: CL TYPE ID . arg OL

    COMMA  shift, and go to state 39

    $default  reduce using rule 15 (arg)

    arg  go to state 40


State 36

   20 var_declaration: TYPE . ID var_names

    ID  shift, and go to state 41


State 37

   17 block: CB var_declarations . statements OB

    $default  reduce using rule 23 (statements)

    statements  go to state 42


State 38

   19 var_declarations: var_declaration . SC var_declarations

    SC  shift, and go to state 43


State 39

   16 arg: COMMA . TYPE ID arg

    TYPE  shift, and go to state 44


State 40

   14 args: CL TYPE ID arg . OL

    OL  shift, and go to state 45


State 41

   20 var_declaration: TYPE ID . var_names

    COMMA  shift, and go to state 46

    $default  reduce using rule 21 (var_names)

    var_names  go to state 47


State 42

   17 block: CB var_declarations statements . OB
   24 statements: statements . statement

    CALLOUT   shift, and go to state 48
    ID        shift, and go to state 49
    CB        shift, and go to state 32
    OB        shift, and go to state 50
    IF        shift, and go to state 51
    FOR       shift, and go to state 52
    BREAK     shift, and go to state 53
    CONTINUE  shift, and go to state 54
    RETURN    shift, and go to state 55

    block          go to state 56
    statement      go to state 57
    assignment     go to state 58
    function_call  go to state 59
    location       go to state 60


State 43

   19 var_declarations: var_declaration SC . var_declarations

    TYPE  shift, and go to state 36

    $default  reduce using rule 18 (var_declarations)

    var_declarations  go to state 61
    var_declaration   go to state 38


State 44

   16 arg: COMMA TYPE . ID arg

    ID  shift, and go to state 62


State 45

   14 args: CL TYPE ID arg OL .

    $default  reduce using rule 14 (args)


State 46

   22 var_names: COMMA . ID var_names

    ID  shift, and go to state 63


State 47

   20 var_declaration: TYPE ID var_names .

    $default  reduce using rule 20 (var_declaration)


State 48

   39 function_call: CALLOUT . CL STRING callout_args OL

    CL  shift, and go to state 64


State 49

   38 function_call: ID . CL pars OL
   42 location: ID .
   43         | ID . CS expr OS

    CL  shift, and go to state 65
    CS  shift, and go to state 66

    $default  reduce using rule 42 (location)


State 50

   17 block: CB var_declarations statements OB .

    $default  reduce using rule 17 (block)


State 51

   27 statement: IF . CL expr OL block
   28          | IF . CL expr OL block ELSE block

    CL  shift, and go to state 67


State 52

   29 statement: FOR . ID EQ expr COMMA expr block

    ID  shift, and go to state 68


State 53

   32 statement: BREAK . SC

    SC  shift, and go to state 69


State 54

   33 statement: CONTINUE . SC

    SC  shift, and go to state 70


State 55

   30 statement: RETURN . SC
   31          | RETURN . expr SC

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75
    SC               shift, and go to state 76

    location     go to state 77
    expr         go to state 78
    literal      go to state 79
    int_literal  go to state 80


State 56

   34 statement: block .

    $default  reduce using rule 34 (statement)


State 57

   24 statements: statements statement .

    $default  reduce using rule 24 (statements)


State 58

   25 statement: assignment .

    $default  reduce using rule 25 (statement)


State 59

   26 statement: function_call . SC

    SC  shift, and go to state 81


State 60

   35 assignment: location . EQ expr SC
   36           | location . PLUSONE expr SC
   37           | location . SUBONE expr SC

    EQ       shift, and go to state 82
    PLUSONE  shift, and go to state 83
    SUBONE   shift, and go to state 84


State 61

   19 var_declarations: var_declaration SC var_declarations .

    $default  reduce using rule 19 (var_declarations)


State 62

   16 arg: COMMA TYPE ID . arg

    COMMA  shift, and go to state 39

    $default  reduce using rule 15 (arg)

    arg  go to state 85


State 63

   22 var_names: COMMA ID . var_names

    COMMA  shift, and go to state 46

    $default  reduce using rule 21 (var_names)

    var_names  go to state 86


State 64

   39 function_call: CALLOUT CL . STRING callout_args OL

    STRING  shift, and go to state 87


State 65

   38 function_call: ID CL . pars OL

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    pars         go to state 88
    location     go to state 77
    expr         go to state 89
    literal      go to state 79
    int_literal  go to state 80


State 66

   43 location: ID CS . expr OS

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 90
    literal      go to state 79
    int_literal  go to state 80


State 67

   27 statement: IF CL . expr OL block
   28          | IF CL . expr OL block ELSE block

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 91
    literal      go to state 79
    int_literal  go to state 80


State 68

   29 statement: FOR ID . EQ expr COMMA expr block

    EQ  shift, and go to state 92


State 69

   32 statement: BREAK SC .

    $default  reduce using rule 32 (statement)


State 70

   33 statement: CONTINUE SC .

    $default  reduce using rule 33 (statement)


State 71

   42 location: ID .
   43         | ID . CS expr OS

    CS  shift, and go to state 66

    $default  reduce using rule 42 (location)


State 72

   66 literal: CHAR_LITERAL .

    $default  reduce using rule 66 (literal)


State 73

   67 literal: BOOL_LITERAL .

    $default  reduce using rule 67 (literal)


State 74

   64 expr: NOT . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 93
    literal      go to state 79
    int_literal  go to state 80


State 75

   48 expr: CL . expr OL

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 94
    literal      go to state 79
    int_literal  go to state 80


State 76

   30 statement: RETURN SC .

    $default  reduce using rule 30 (statement)


State 77

   49 expr: location .

    $default  reduce using rule 49 (expr)


State 78

   31 statement: RETURN expr . SC
   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    EQQ  shift, and go to state 95
    NQQ  shift, and go to state 96
    AND  shift, and go to state 97
    OR   shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107
    SC   shift, and go to state 108


State 79

   50 expr: literal .

    $default  reduce using rule 50 (expr)


State 80

   65 literal: int_literal .

    $default  reduce using rule 65 (literal)


State 81

   26 statement: function_call SC .

    $default  reduce using rule 26 (statement)


State 82

   35 assignment: location EQ . expr SC

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 109
    literal      go to state 79
    int_literal  go to state 80


State 83

   36 assignment: location PLUSONE . expr SC

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 110
    literal      go to state 79
    int_literal  go to state 80


State 84

   37 assignment: location SUBONE . expr SC

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 111
    literal      go to state 79
    int_literal  go to state 80


State 85

   16 arg: COMMA TYPE ID arg .

    $default  reduce using rule 16 (arg)


State 86

   22 var_names: COMMA ID var_names .

    $default  reduce using rule 22 (var_names)


State 87

   39 function_call: CALLOUT CL STRING . callout_args OL

    $default  reduce using rule 44 (callout_args)

    callout_args  go to state 112


State 88

   38 function_call: ID CL pars . OL
   41 pars: pars . COMMA expr

    OL     shift, and go to state 113
    COMMA  shift, and go to state 114


State 89

   40 pars: expr .
   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    EQQ  shift, and go to state 95
    NQQ  shift, and go to state 96
    AND  shift, and go to state 97
    OR   shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107

    $default  reduce using rule 40 (pars)


State 90

   43 location: ID CS expr . OS
   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    EQQ  shift, and go to state 95
    NQQ  shift, and go to state 96
    AND  shift, and go to state 97
    OR   shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107
    OS   shift, and go to state 115


State 91

   27 statement: IF CL expr . OL block
   28          | IF CL expr . OL block ELSE block
   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    EQQ  shift, and go to state 95
    NQQ  shift, and go to state 96
    AND  shift, and go to state 97
    OR   shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107
    OL   shift, and go to state 116


State 92

   29 statement: FOR ID EQ . expr COMMA expr block

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 117
    literal      go to state 79
    int_literal  go to state 80


State 93

   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr
   64     | NOT expr .

    $default  reduce using rule 64 (expr)


State 94

   48 expr: CL expr . OL
   51     | expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    EQQ  shift, and go to state 95
    NQQ  shift, and go to state 96
    AND  shift, and go to state 97
    OR   shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107
    OL   shift, and go to state 118


State 95

   55 expr: expr EQQ . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 119
    literal      go to state 79
    int_literal  go to state 80


State 96

   54 expr: expr NQQ . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 120
    literal      go to state 79
    int_literal  go to state 80


State 97

   53 expr: expr AND . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 121
    literal      go to state 79
    int_literal  go to state 80


State 98

   52 expr: expr OR . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 122
    literal      go to state 79
    int_literal  go to state 80


State 99

   59 expr: expr LT . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 123
    literal      go to state 79
    int_literal  go to state 80


State 100

   58 expr: expr GT . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 124
    literal      go to state 79
    int_literal  go to state 80


State 101

   57 expr: expr LE . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 125
    literal      go to state 79
    int_literal  go to state 80


State 102

   56 expr: expr GE . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 126
    literal      go to state 79
    int_literal  go to state 80


State 103

   63 expr: expr ADD . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 127
    literal      go to state 79
    int_literal  go to state 80


State 104

   51 expr: expr SUB . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 128
    literal      go to state 79
    int_literal  go to state 80


State 105

   62 expr: expr MUL . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 129
    literal      go to state 79
    int_literal  go to state 80


State 106

   61 expr: expr DIV . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 130
    literal      go to state 79
    int_literal  go to state 80


State 107

   60 expr: expr MOD . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 131
    literal      go to state 79
    int_literal  go to state 80


State 108

   31 statement: RETURN expr SC .

    $default  reduce using rule 31 (statement)


State 109

   35 assignment: location EQ expr . SC
   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    EQQ  shift, and go to state 95
    NQQ  shift, and go to state 96
    AND  shift, and go to state 97
    OR   shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107
    SC   shift, and go to state 132


State 110

   36 assignment: location PLUSONE expr . SC
   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    EQQ  shift, and go to state 95
    NQQ  shift, and go to state 96
    AND  shift, and go to state 97
    OR   shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107
    SC   shift, and go to state 133


State 111

   37 assignment: location SUBONE expr . SC
   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    EQQ  shift, and go to state 95
    NQQ  shift, and go to state 96
    AND  shift, and go to state 97
    OR   shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107
    SC   shift, and go to state 134


State 112

   39 function_call: CALLOUT CL STRING callout_args . OL
   45 callout_args: callout_args . COMMA callout_arg

    OL     shift, and go to state 135
    COMMA  shift, and go to state 136


State 113

   38 function_call: ID CL pars OL .

    $default  reduce using rule 38 (function_call)


State 114

   41 pars: pars COMMA . expr

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 137
    literal      go to state 79
    int_literal  go to state 80


State 115

   43 location: ID CS expr OS .

    $default  reduce using rule 43 (location)


State 116

   27 statement: IF CL expr OL . block
   28          | IF CL expr OL . block ELSE block

    CB  shift, and go to state 32

    block  go to state 138


State 117

   29 statement: FOR ID EQ expr . COMMA expr block
   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    EQQ    shift, and go to state 95
    NQQ    shift, and go to state 96
    AND    shift, and go to state 97
    OR     shift, and go to state 98
    LT     shift, and go to state 99
    GT     shift, and go to state 100
    LE     shift, and go to state 101
    GE     shift, and go to state 102
    ADD    shift, and go to state 103
    SUB    shift, and go to state 104
    MUL    shift, and go to state 105
    DIV    shift, and go to state 106
    MOD    shift, and go to state 107
    COMMA  shift, and go to state 139


State 118

   48 expr: CL expr OL .

    $default  reduce using rule 48 (expr)


State 119

   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   55     | expr EQQ expr .
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    AND  shift, and go to state 97
    OR   shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107

    $default  reduce using rule 55 (expr)


State 120

   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   54     | expr NQQ expr .
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    AND  shift, and go to state 97
    OR   shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107

    $default  reduce using rule 54 (expr)


State 121

   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   53     | expr AND expr .
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107

    $default  reduce using rule 53 (expr)


State 122

   51 expr: expr . SUB expr
   52     | expr . OR expr
   52     | expr OR expr .
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107

    $default  reduce using rule 52 (expr)


State 123

   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   59     | expr LT expr .
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107

    $default  reduce using rule 59 (expr)


State 124

   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   58     | expr GT expr .
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107

    $default  reduce using rule 58 (expr)


State 125

   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   57     | expr LE expr .
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107

    $default  reduce using rule 57 (expr)


State 126

   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   56     | expr GE expr .
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107

    $default  reduce using rule 56 (expr)


State 127

   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr
   63     | expr ADD expr .

    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107

    $default  reduce using rule 63 (expr)


State 128

   51 expr: expr . SUB expr
   51     | expr SUB expr .
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107

    $default  reduce using rule 51 (expr)


State 129

   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   62     | expr MUL expr .
   63     | expr . ADD expr

    $default  reduce using rule 62 (expr)


State 130

   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   61     | expr DIV expr .
   62     | expr . MUL expr
   63     | expr . ADD expr

    $default  reduce using rule 61 (expr)


State 131

   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   60     | expr MOD expr .
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    $default  reduce using rule 60 (expr)


State 132

   35 assignment: location EQ expr SC .

    $default  reduce using rule 35 (assignment)


State 133

   36 assignment: location PLUSONE expr SC .

    $default  reduce using rule 36 (assignment)


State 134

   37 assignment: location SUBONE expr SC .

    $default  reduce using rule 37 (assignment)


State 135

   39 function_call: CALLOUT CL STRING callout_args OL .

    $default  reduce using rule 39 (function_call)


State 136

   45 callout_args: callout_args COMMA . callout_arg

    STRING           shift, and go to state 140
    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    callout_arg  go to state 141
    expr         go to state 142
    literal      go to state 79
    int_literal  go to state 80


State 137

   41 pars: pars COMMA expr .
   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    EQQ  shift, and go to state 95
    NQQ  shift, and go to state 96
    AND  shift, and go to state 97
    OR   shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107

    $default  reduce using rule 41 (pars)


State 138

   27 statement: IF CL expr OL block .
   28          | IF CL expr OL block . ELSE block

    ELSE  shift, and go to state 143

    $default  reduce using rule 27 (statement)


State 139

   29 statement: FOR ID EQ expr COMMA . expr block

    ID               shift, and go to state 71
    CHAR_LITERAL     shift, and go to state 72
    DECIMAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL     shift, and go to state 73
    HEX_LITERAL      shift, and go to state 23
    NOT              shift, and go to state 74
    CL               shift, and go to state 75

    location     go to state 77
    expr         go to state 144
    literal      go to state 79
    int_literal  go to state 80


State 140

   47 callout_arg: STRING .

    $default  reduce using rule 47 (callout_arg)


State 141

   45 callout_args: callout_args COMMA callout_arg .

    $default  reduce using rule 45 (callout_args)


State 142

   46 callout_arg: expr .
   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    EQQ  shift, and go to state 95
    NQQ  shift, and go to state 96
    AND  shift, and go to state 97
    OR   shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107

    $default  reduce using rule 46 (callout_arg)


State 143

   28 statement: IF CL expr OL block ELSE . block

    CB  shift, and go to state 32

    block  go to state 145


State 144

   29 statement: FOR ID EQ expr COMMA expr . block
   51 expr: expr . SUB expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . NQQ expr
   55     | expr . EQQ expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . GT expr
   59     | expr . LT expr
   60     | expr . MOD expr
   61     | expr . DIV expr
   62     | expr . MUL expr
   63     | expr . ADD expr

    EQQ  shift, and go to state 95
    NQQ  shift, and go to state 96
    AND  shift, and go to state 97
    OR   shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LE   shift, and go to state 101
    GE   shift, and go to state 102
    ADD  shift, and go to state 103
    SUB  shift, and go to state 104
    MUL  shift, and go to state 105
    DIV  shift, and go to state 106
    MOD  shift, and go to state 107
    CB   shift, and go to state 32

    block  go to state 146


State 145

   28 statement: IF CL expr OL block ELSE block .

    $default  reduce using rule 28 (statement)


State 146

   29 statement: FOR ID EQ expr COMMA expr block .

    $default  reduce using rule 29 (statement)
